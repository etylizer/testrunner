name: Run testrunner on all binaries
on:
  workflow_call:
    inputs:
      debug_mode:
        type: boolean
        default: false
      etylizer_artifact_name:
        type: string
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'etylizer/testrunner'
      - uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.16.x'
          otp-version: '26.x'

      - name: Install dependencies
        run: mix deps.get
      - name: Compile dependencies
        run: mix deps.compile

      - name: Build application
        run: mix compile
      - name: Build escript executable
        run: MIX_ENV=prod mix escript.build

      - name: Upload testrunner executable
        uses: actions/upload-artifact@v4
        with:
          name: 'testrunner'
          path: 'out/testrunner'
          retention-days: 1

  execute:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        analyzer:
          - 'dialyzer'
          - 'eqwalizer'
          - 'etylizer'
          - 'gradualizer'
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'etylizer/testrunner'
      - uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.16.x'
          otp-version: '26.x'
      - name: Download compiled binary
        uses: actions/download-artifact@v4
        with:
          name: 'testrunner'
      - name: Ensure correct file permissions
        run: chmod u+x testrunner

      - name: Download etylizer artifact
        uses: actions/download-artifact@v4
        if: ${{ matrix.analyzer == 'etylizer' && inputs.etylizer_artifact_name != '' }}
        with:
          name: ${{ inputs.etylizer_artifact_name }}

      # build plt first
      - name: Build dialyzer plt
        if: ${{ matrix.analyzer == 'dialyzer' }}
        run: dialyzer --build_plt --apps erts kernel stdlib || true

      - name: Print dialyzer info
        if: ${{ matrix.analyzer == 'dialyzer' }}
        run: dialyzer --version && (dialyzer || true)

      - name: Print gradualizer info
        if: ${{ matrix.analyzer == 'gradualizer' }}
        run: ./gradualizer --version

      - name: Print etylizer info # has no version yet
        if: ${{ matrix.analyzer == 'etylizer' }}
        run: ./ety || true

      - name: Print eqWAlizer info
        if: ${{ matrix.analyzer == 'eqwalizer' }}
        run: ./elp version

      - name: Print timeout info
        run: ./timeout -t 10 -m 2000000 echo OK

      - name: Create _build directory for ety # Needed for bundled ety to work
        if: ${{ matrix.analyzer == 'etylizer' }}
        run: mkdir _build

      - name: Execute Runner on test suites
        run: ./testrunner -s etylizer-src,dialyzer-src,gradualizer-src,eqwalizer-src --debug=${{ inputs.debug_mode }} --analyzer ${{ matrix.analyzer }}

      - name: Rename output file
        run: mv test_results.json test_results_${{ matrix.analyzer }}.json

      - name: Archive test results
        uses: actions/upload-artifact@v4
        with:
          name: test-report-${{ matrix.analyzer }}
          path: test_results_${{ matrix.analyzer }}.json

  reports:
    runs-on: ubuntu-latest
    needs: execute
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'etylizer/testrunner'

      - name: Download dialyzer test results
        uses: actions/download-artifact@v4
        with:
          name: test-report-dialyzer
          path: report-generator/results
      - name: Download eqwalizer test results
        uses: actions/download-artifact@v4
        with:
          name: test-report-eqwalizer
          path: report-generator/results
      - name: Download etylizer test results
        uses: actions/download-artifact@v4
        with:
          name: test-report-etylizer
          path: report-generator/results
      - name: Download gradualizer test results
        uses: actions/download-artifact@v4
        with:
          name: test-report-gradualizer
          path: report-generator/results

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Run report generator
        run: ./gradlew run --args="results"
        working-directory: report-generator
      - name: Create top-level output directory
        run: mkdir output
      - name: Move report output to top-level output directory
        run: mv report-generator/report-output output/
      - name: Upload plots
        uses: actions/upload-artifact@v4
        with:
          path: 'output'
          name: 'report-output'
